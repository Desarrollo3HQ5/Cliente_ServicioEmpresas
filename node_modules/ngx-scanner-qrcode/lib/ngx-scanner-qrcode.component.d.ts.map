{"version":3,"file":"ngx-scanner-qrcode.component.d.ts","sources":["ngx-scanner-qrcode.component.d.ts"],"names":[],"mappingssourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnInit } from '@angular/core';\r\nimport { BehaviorSubject, AsyncSubject } from 'rxjs';\r\nimport { BaseConfig, ScannerQRCodeResult } from './ngx-scanner-qrcode.options';\r\nexport declare class NgxScannerQrcodeComponent implements OnInit, OnDestroy {\r\n    /**\r\n     * Element\r\n     * playsinline required to tell iOS safari we don't want fullscreen\r\n     */\r\n    video: ElementRef<HTMLVideoElement>;\r\n    canvas: ElementRef<HTMLCanvasElement>;\r\n    resultsPanel: ElementRef<HTMLDivElement>;\r\n    /**\r\n     * EventEmitter\r\n     */\r\n    error: EventEmitter<any>;\r\n    event: EventEmitter<ScannerQRCodeResult>;\r\n    /**\r\n     * Input\r\n     */\r\n    src: string | undefined;\r\n    isAuto: boolean | undefined;\r\n    isBeep: boolean | undefined;\r\n    isAlwaysEmit: boolean | undefined;\r\n    config: BaseConfig;\r\n    medias: MediaStreamConstraints | undefined;\r\n    /**\r\n     * Export\r\n     */\r\n    isStart: boolean;\r\n    isLoading: boolean;\r\n    data: BehaviorSubject<ScannerQRCodeResult>;\r\n    /**\r\n     * Private\r\n     */\r\n    private rAF_ID;\r\n    ngOnInit(): void;\r\n    /**\r\n     * start\r\n     * @return AsyncSubject\r\n     */\r\n    start(): AsyncSubject<any>;\r\n    /**\r\n     * stop\r\n     * @return AsyncSubject\r\n     */\r\n    stop(): AsyncSubject<any>;\r\n    /**\r\n     * play\r\n     * @return AsyncSubject\r\n     */\r\n    play(): AsyncSubject<any>;\r\n    /**\r\n     * pause\r\n     * @return AsyncSubject\r\n     */\r\n    pause(): AsyncSubject<any>;\r\n    /**\r\n     * loadImage\r\n     * @param src\r\n     */\r\n    loadImage(src: string): AsyncSubject<any>;\r\n    /**\r\n     * window: resize\r\n     * Draw again!\r\n     */\r\n    private resize;\r\n    /**\r\n     * Override config\r\n     * @return void\r\n     */\r\n    private overrideConfig;\r\n    /**\r\n     * drawImage\r\n     * @param element\r\n     * @param callback\r\n     */\r\n    private drawImage;\r\n    /**\r\n     * removeCanvas\r\n     */\r\n    private removeCanvas;\r\n    /**\r\n     * status\r\n     * @param isStart\r\n     * @param isLoading\r\n     */\r\n    private status;\r\n    /**\r\n     * eventEmit\r\n     * @param response\r\n     * @param error\r\n     */\r\n    private eventEmit;\r\n    /**\r\n     * Single-thread\r\n     * Loop Recording on Camera\r\n     * Must be destroy request\r\n     * requestAnimationFrame\r\n     */\r\n    private requestAnimationFrame;\r\n    /**\r\n     * Status of camera\r\n     * @return boolean\r\n     */\r\n    readonly isPause: boolean;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}