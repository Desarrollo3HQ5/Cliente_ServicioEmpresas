{"version":3,"file":"ngx-scanner-qrcode.js","sources":["ngx-scanner-qrcode/lib/ngx-scanner-qrcode.default.ts","ngx-scanner-qrcode/lib/ngx-scanner-qrcode.helper.ts","ngx-scanner-qrcode/lib/ngx-scanner-qrcode.service.ts","ngx-scanner-qrcode/lib/ngx-scanner-qrcode.component.ts","ngx-scanner-qrcode/lib/ngx-scanner-qrcode.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseConfig } from \"./ngx-scanner-qrcode.options\";\r\n\r\n/**\r\n * MediaStream\r\n * Use facingMode: environment to attemt to get the front camera on phones\r\n */\r\nexport const MEDIA_STREAM_DEFAULT: MediaStreamConstraints = {\r\n  audio: false,\r\n  video: true\r\n};\r\n\r\nexport const CONFIG_DEFAULT: BaseConfig = {\r\n  src: '',\r\n  isAuto: false,\r\n  isBeep: true,\r\n  isAlwaysEmit: false,\r\n  medias: MEDIA_STREAM_DEFAULT,\r\n};\r\n\r\n/**\r\n * Audio\r\n * Camera beep\r\n */\r\nexport const CAMERA_BEEP = \"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\";\r\n","import { AsyncSubject } from \"rxjs\";\r\nimport { CAMERA_BEEP } from \"./ngx-scanner-qrcode.default\";\r\nimport { QRCode } from \"./ngx-scanner-qrcode.options\";\r\n\r\n/**\r\n * OVERRIDES\r\n * @param variableKey \r\n * @param config \r\n * @param defaultConfig \r\n * @returns \r\n */\r\nexport const OVERRIDES = (variableKey: string, config: any, defaultConfig: any) => {\r\n  if (config && Object.keys(config[variableKey]).length) {\r\n    for (const key in defaultConfig) {\r\n      const cloneDeep = JSON.parse(JSON.stringify({ ...config[variableKey], ...{ [key]: (defaultConfig as any)[key] } }));\r\n      config[variableKey] = config[variableKey].hasOwnProperty(key) ? config[variableKey] : cloneDeep;\r\n    }\r\n    return config[variableKey];\r\n  } else {\r\n    return defaultConfig;\r\n  }\r\n};\r\n\r\n/**\r\n * Rxjs complete\r\n * @param as\r\n * @param data\r\n * @param error\r\n */\r\nexport const AS_COMPLETE = (as: AsyncSubject<any>, data: any, error = null) => {\r\n  error ? as.error(error) : as.next(data);\r\n  as.complete();\r\n};\r\n\r\n/**\r\n * CAMERA_BEEP\r\n * @param isPlay \r\n * @returns \r\n */\r\nexport const PLAY_AUDIO = (isPlay: boolean = false) => {\r\n  if (isPlay === false) return;\r\n  const audio = new Audio(CAMERA_BEEP);\r\n  // when the sound has been loaded, execute your code\r\n  audio.oncanplaythrough = () => {\r\n    const promise = audio.play();\r\n    if (promise) {\r\n      promise.catch((e) => {\r\n        if (e.name === \"NotAllowedError\" || e.name === \"NotSupportedError\") {\r\n          // console.log(e.name);\r\n        }\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\n/**\r\n * HAS_OWN_PROPERTY\r\n * Fix issue vs ng v 6-7-8\r\n * Optional chaining (?.) just have on ng v 9++\r\n * eg: HAS_OWN_PROPERTY(config, 'frameOptions.style') // output: boolean\r\n * @param obj \r\n * @param propertyPath \r\n * @returns \r\n */\r\nexport const HAS_OWN_PROPERTY = (obj: any, propertyPath: string) => {\r\n  const properties = propertyPath.split(\".\");\r\n  for (let  i = 0; i < properties.length; i++) {\r\n      let prop = properties[i];\r\n      if (!obj.hasOwnProperty(prop)) {\r\n          return false;\r\n      } else {\r\n          obj = obj[prop];\r\n      }\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * DRAW_RESULT\r\n * @param code \r\n * @param oriCanvas \r\n * @param elTarget \r\n * @returns \r\n */\r\nexport const DRAW_RESULT = (code: QRCode, oriCanvas: HTMLCanvasElement, elTarget: HTMLCanvasElement | HTMLDivElement): HTMLCanvasElement => {\r\n  let widthZoom;\r\n  let heightZoom;\r\n  let oriWidth = oriCanvas.width;\r\n  let oriHeight = oriCanvas.height;\r\n  let oriWHRatio = oriWidth / oriHeight;\r\n  let imgWidth = parseInt(getComputedStyle(oriCanvas).width);\r\n  let imgHeight = parseInt(getComputedStyle(oriCanvas).height);\r\n  let imgWHRatio = imgWidth / imgHeight;\r\n\r\n  let cvs = document.createElement(\"canvas\");\r\n  let ctx = cvs.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n  ctx.globalCompositeOperation = \"destination-over\";\r\n\r\n  let loc: any = {};\r\n  loc.x1 = code.location.topLeftCorner.x;\r\n  loc.y1 = code.location.topLeftCorner.y;\r\n  loc.x2 = code.location.topRightCorner.x;\r\n  loc.y2 = code.location.topRightCorner.y;\r\n  loc.x3 = code.location.bottomLeftCorner.x;\r\n  loc.y3 = code.location.bottomLeftCorner.y;\r\n  loc.x4 = code.location.bottomRightCorner.x;\r\n  loc.y4 = code.location.bottomRightCorner.y;\r\n  \r\n  let locXArr = [loc.x1, loc.x2, loc.x3, loc.x4];\r\n  let locYArr = [loc.y1, loc.y2, loc.y3, loc.y4];\r\n  \r\n  let maxX = Math.max(loc.x1, loc.x2, loc.x3, loc.x4);\r\n  let minX = Math.min(loc.x1, loc.x2, loc.x3, loc.x4);\r\n  let maxY = Math.max(loc.y1, loc.y2, loc.y3, loc.y4);\r\n  let minY = Math.min(loc.y1, loc.y2, loc.y3, loc.y4);\r\n  \r\n  let minXToY = locYArr[locXArr.indexOf(minX)];\r\n  let minYToX = locXArr[locYArr.indexOf(minY)];\r\n  let maxXToY = locYArr[locXArr.indexOf(maxX)];\r\n  let maxYToX = locXArr[locYArr.indexOf(maxY)];\r\n\r\n  if (oriWHRatio > imgWHRatio) {\r\n    widthZoom = imgWidth / oriWidth;\r\n    heightZoom = imgWidth / oriWHRatio / oriHeight;\r\n    cvs.style.top = minY * heightZoom + (imgHeight - imgWidth / oriWHRatio) * 0.5 + \"px\";\r\n    cvs.style.left = minX * widthZoom + \"px\";\r\n    cvs.width = (maxX - minX) * widthZoom;\r\n    cvs.height = (maxY - minY) * widthZoom;\r\n    cvs.style.width = (maxX - minX) * widthZoom + \"px\";\r\n    cvs.style.height = (maxY - minY) * widthZoom + \"px\";\r\n  } else {\r\n    heightZoom = imgHeight / oriHeight;\r\n    widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n    cvs.style.top = minY * heightZoom + \"px\";\r\n    cvs.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n    cvs.width = (maxX - minX) * heightZoom;\r\n    cvs.height = (maxY - minY) * heightZoom;\r\n    cvs.style.width = (maxX - minX) * heightZoom + \"px\";\r\n    cvs.style.height = (maxY - minY) * heightZoom + \"px\";\r\n  }\r\n\r\n  cvs.style.zIndex = '1';\r\n  cvs.style.position = \"absolute\";\r\n  ctx.fillStyle = \"#55f02880\";\r\n  \r\n  const isSquare = () => {\r\n    const left = Math.floor(loc.x1) - Math.floor(loc.x3);\r\n    const right = Math.floor(loc.x2) - Math.floor(loc.x4);\r\n    return ~~left <= 1 && ~~right <= 1 && code.location.topLeftFinderPattern.y == code.location.topRightFinderPattern.y;\r\n  } \r\n  \r\n  if (!isSquare()) {\r\n    const h1 = minXToY * heightZoom - minY * heightZoom;\r\n    const w1 = minYToX * widthZoom - minX * widthZoom;\r\n    const h2 = maxXToY * heightZoom - minY * heightZoom;\r\n    const w2 = maxYToX * widthZoom - minX * widthZoom;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, h1);\r\n    ctx.lineTo(w1, 0);\r\n    ctx.lineTo(cvs.width, h2);\r\n    ctx.lineTo(w2, cvs.height);\r\n    ctx.fill();\r\n  } else {\r\n    ctx.fillRect(0, 0, cvs.width, cvs.height);\r\n  }\r\n\r\n  // Tooltip result\r\n  const qrcodeTooltipTemp = document.createElement('div');\r\n  qrcodeTooltipTemp.setAttribute('class', 'qrcode-tooltip-temp');\r\n  qrcodeTooltipTemp.innerHTML = code.data;\r\n  \r\n  // Tooltip box\r\n  const qrcodeTooltip = document.createElement('div');\r\n  qrcodeTooltip.setAttribute('class', 'qrcode-tooltip');\r\n  qrcodeTooltip.appendChild(qrcodeTooltipTemp);\r\n  heightZoom = imgHeight / oriHeight;\r\n  widthZoom = (imgHeight * oriWHRatio) / oriWidth;\r\n  qrcodeTooltip.style.fontSize = widthZoom * 15 +'px'; \r\n  qrcodeTooltip.style.top = minY * heightZoom + \"px\";\r\n  qrcodeTooltip.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n  qrcodeTooltip.style.width = (maxX - minX) * heightZoom + \"px\";\r\n  qrcodeTooltip.style.height = (maxY - minY) * heightZoom + \"px\";\r\n  // Result text\r\n  const resultText = document.createElement('input');\r\n  resultText.value = code.data;\r\n  resultText.style.zIndex = '3'; \r\n  resultText.style.fontSize = widthZoom * 15 +'px'; \r\n  resultText.style.color = 'red';\r\n  resultText.style.border = 'none';\r\n  resultText.style.outline = 'none';\r\n  resultText.style.position = 'absolute';\r\n  resultText.style.background = '#ffffff00';\r\n  resultText.style.width = '-webkit-fill-available';\r\n  resultText.style.minWidth = qrcodeTooltip.style.width;\r\n  resultText.setAttribute('class', 'qrcode-data');\r\n  // Set position result text\r\n  resultText.style.top = minY * heightZoom + (-20 * heightZoom) + \"px\";\r\n  resultText.style.left = minX * widthZoom + (imgWidth - imgHeight * oriWHRatio) * 0.5 + \"px\";\r\n  \r\n  if (elTarget) {\r\n    elTarget.innerHTML = '';\r\n    elTarget.appendChild(cvs);\r\n    elTarget.appendChild(resultText);\r\n    elTarget.appendChild(qrcodeTooltip);\r\n  }\r\n\r\n  return cvs;\r\n}","import { Injectable } from '@angular/core';\r\nimport { AsyncSubject } from 'rxjs';\r\nimport { AS_COMPLETE } from './ngx-scanner-qrcode.helper';\r\nimport { ScannerQRCodeResult } from './ngx-scanner-qrcode.options';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxScannerQrcodeService {\r\n\r\n  /**\r\n   * Load files\r\n   * @param files \r\n   * @return AsyncSubject\r\n   */\r\n  public loadFiles(files: File[] = []): AsyncSubject<ScannerQRCodeResult[]> {\r\n    const as = new AsyncSubject<ScannerQRCodeResult[]>();\r\n    Promise.all(Object.assign([], files).map(m => this.readAsDataURL(m))).then((img: ScannerQRCodeResult[]) => AS_COMPLETE(as, img)).catch((error: any) => AS_COMPLETE(as, null, error));\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * readAsDataURL\r\n   * @param file \r\n   * @return Promise\r\n   */\r\n  private readAsDataURL(file: File): Promise<ScannerQRCodeResult> {\r\n    /** drawImage **/\r\n    return new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        const objectFile = {\r\n          name: file.name,\r\n          file: file,\r\n          base64: fileReader.result as string,\r\n          url: URL.createObjectURL(file)\r\n        };\r\n        resolve(objectFile);\r\n      }\r\n      fileReader.onerror = (error: any) => reject(error);\r\n      fileReader.readAsDataURL(file);\r\n    })\r\n  }\r\n}","import { Component, ElementRef, EventEmitter, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\r\nimport { BehaviorSubject, AsyncSubject } from 'rxjs';\r\nimport jsQR from 'jsqr';\r\nimport { AS_COMPLETE, DRAW_RESULT, HAS_OWN_PROPERTY, OVERRIDES, PLAY_AUDIO } from './ngx-scanner-qrcode.helper';\r\nimport { BaseConfig, ScannerQRCodeResult } from './ngx-scanner-qrcode.options';\r\nimport { CONFIG_DEFAULT, MEDIA_STREAM_DEFAULT } from './ngx-scanner-qrcode.default';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-scanner-qrcode',\r\n  templateUrl: './ngx-scanner-qrcode.component.html',\r\n  styleUrls: ['./ngx-scanner-qrcode.component.scss'],\r\n  host: { 'class': 'ngx-scanner-qrcode' },\r\n  exportAs: 'scanner',\r\n  inputs: ['src', 'isAuto', 'isBeep', 'isAlwaysEmit', 'config', 'medias'],\r\n  outputs: ['event', 'error'],\r\n  queries: {\r\n    video: new ViewChild('video'),\r\n    canvas: new ViewChild('canvas'),\r\n    resultsPanel: new ViewChild('resultsPanel')\r\n  },\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxScannerQrcodeComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Element\r\n   * playsinline required to tell iOS safari we don't want fullscreen\r\n   */\r\n  public video!: ElementRef<HTMLVideoElement>;\r\n  public canvas!: ElementRef<HTMLCanvasElement>;\r\n  public resultsPanel!: ElementRef<HTMLDivElement>;\r\n\r\n  /**\r\n   * EventEmitter\r\n   */\r\n  public error = new EventEmitter<any | null>();\r\n  public event = new EventEmitter<ScannerQRCodeResult>();\r\n\r\n  /**\r\n   * Input\r\n   */\r\n  public src: string | undefined = CONFIG_DEFAULT.src;\r\n  public isAuto: boolean | undefined = CONFIG_DEFAULT.isAuto;\r\n  public isBeep: boolean | undefined = CONFIG_DEFAULT.isBeep;\r\n  public isAlwaysEmit: boolean | undefined = CONFIG_DEFAULT.isAlwaysEmit;\r\n  public config: BaseConfig = CONFIG_DEFAULT;\r\n  public medias: MediaStreamConstraints | undefined = CONFIG_DEFAULT.medias;\r\n\r\n  /**\r\n   * Export\r\n   */\r\n  public isStart: boolean = false;\r\n  public isLoading: boolean = false;\r\n  public data = new BehaviorSubject<ScannerQRCodeResult>({});\r\n\r\n  /**\r\n   * Private\r\n   */\r\n  private rAF_ID: any;\r\n\r\n  ngOnInit(): void {\r\n    this.overrideConfig();\r\n    if (this.src) {\r\n      this.loadImage(this.src);\r\n    } else if (this.isAuto) {\r\n      this.start();\r\n    }\r\n    this.resize();\r\n  }\r\n\r\n  /**\r\n   * start\r\n   * @return AsyncSubject\r\n   */\r\n  public start(): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    if (this.isStart) {\r\n      // Reject\r\n      AS_COMPLETE(as, false);\r\n    } else {\r\n      // Loading on\r\n      this.status(false, true);\r\n      /**\r\n       * MediaStream\r\n       * Use facingMode: environment to attemt to get the front camera on phones\r\n       */\r\n      navigator.mediaDevices.getUserMedia(this.medias).then((stream: MediaStream) => {\r\n        this.video.nativeElement.srcObject = stream;\r\n        this.video.nativeElement.onloadedmetadata = () => {\r\n          this.video.nativeElement.play();\r\n          this.requestAnimationFrame();\r\n          this.status(true, false);\r\n          AS_COMPLETE(as, true);\r\n        }\r\n      }).catch(error => {\r\n        this.status(false, false);\r\n        this.eventEmit(false, error);\r\n        AS_COMPLETE(as, false, error);\r\n      });\r\n    }\r\n\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * stop\r\n   * @return AsyncSubject\r\n   */\r\n  public stop(): AsyncSubject<any> {\r\n    this.eventEmit(null);\r\n    this.status(false, false);\r\n    const as = new AsyncSubject<any>();\r\n    try {\r\n      this.removeCanvas();\r\n      clearInterval(this.rAF_ID);\r\n      (this.video.nativeElement.srcObject as MediaStream).getTracks().forEach((track: any) => {\r\n        track.stop();\r\n        AS_COMPLETE(as, true);\r\n      });\r\n    } catch (error) {\r\n      this.eventEmit(false, error);\r\n      AS_COMPLETE(as, false, error as any);\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * play\r\n   * @return AsyncSubject\r\n   */\r\n  public play(): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    if (this.isPause) {\r\n      this.video.nativeElement.play();\r\n      this.requestAnimationFrame();\r\n      AS_COMPLETE(as, true);\r\n    } else {\r\n      AS_COMPLETE(as, false);\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * pause\r\n   * @return AsyncSubject \r\n   */\r\n  public pause(): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    if (this.isStart) {\r\n      clearInterval(this.rAF_ID);\r\n      this.video.nativeElement.pause();\r\n      AS_COMPLETE(as, true);\r\n    } else {\r\n      AS_COMPLETE(as, false);\r\n    }\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * loadImage\r\n   * @param src \r\n   */\r\n  public loadImage(src: string): AsyncSubject<any> {\r\n    const as = new AsyncSubject<any>();\r\n    // Loading on\r\n    this.status(false, true);\r\n    // Set the src of this Image object.\r\n    const image = new Image();\r\n    // Setting cross origin value to anonymous\r\n    image.setAttribute('crossOrigin', 'anonymous');\r\n    // When our image has loaded.\r\n    image.onload = () => {\r\n      this.drawImage(image, (flag: boolean) => { \r\n        this.status(false, false);\r\n        AS_COMPLETE(as, flag);\r\n      });\r\n    };\r\n    // Set src\r\n    image.src = src;\r\n    return as;\r\n  }\r\n\r\n  /**\r\n   * window: resize\r\n   * Draw again!\r\n   */\r\n  private resize(): void {\r\n    window.addEventListener(\"resize\", () => this.data.subscribe(res => {\r\n      if (HAS_OWN_PROPERTY(res, 'location')) {\r\n        DRAW_RESULT(res as any, this.canvas.nativeElement, this.resultsPanel.nativeElement);\r\n      } \r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Override config\r\n   * @return void\r\n   */\r\n  private overrideConfig(): void {\r\n    if (HAS_OWN_PROPERTY(this.config, 'src')) this.src = this.config.src;\r\n    if (HAS_OWN_PROPERTY(this.config, 'isAuto')) this.isAuto = this.config.isAuto;\r\n    if (HAS_OWN_PROPERTY(this.config, 'isBeep')) this.isBeep = this.config.isBeep;\r\n    if (HAS_OWN_PROPERTY(this.config, 'isAlwaysEmit')) this.isAlwaysEmit = this.config.isAlwaysEmit;\r\n    if (HAS_OWN_PROPERTY(this.config, 'medias')) this.medias = OVERRIDES('medias', this.config, MEDIA_STREAM_DEFAULT);\r\n  }\r\n\r\n  /**\r\n   * drawImage\r\n   * @param element \r\n   * @param callback \r\n   */\r\n  private drawImage(element: HTMLImageElement | HTMLVideoElement, callback: Function = () => {}): void {\r\n    // Get the canvas element by using the getElementById method.\r\n    const canvas = this.canvas.nativeElement;\r\n    // Get a 2D drawing context for the canvas.\r\n    const ctx = canvas.getContext('2d', { willReadFrequently: true }) as CanvasRenderingContext2D;\r\n    // HTMLImageElement size\r\n    if (element instanceof HTMLImageElement) {\r\n      canvas.width = element.naturalWidth;\r\n      canvas.height = element.naturalHeight;\r\n      element.style.visibility = '';\r\n      this.video.nativeElement.style.visibility = 'hidden';\r\n    }\r\n    // HTMLVideoElement size\r\n    if (element instanceof HTMLVideoElement) {\r\n      canvas.width = element.videoWidth;\r\n      canvas.height = element.videoHeight;\r\n      element.style.visibility = '';\r\n      this.canvas.nativeElement.style.visibility = 'hidden';\r\n    }\r\n    // Draw image\r\n    ctx.drawImage(element, 0, 0, canvas.width, canvas.height);\r\n    // Data image\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n    // Draw frame\r\n    const code = jsQR(imageData.data, imageData.width, imageData.height, { inversionAttempts: \"attemptBoth\" }); /* \"dontInvert\" | \"onlyInvert\" | \"attemptBoth\" | \"invertFirst\" */\r\n    if (code) {\r\n      DRAW_RESULT(code, Object.freeze(this.canvas.nativeElement), this.resultsPanel.nativeElement);\r\n\r\n      // toBlob and emit data\r\n      const EMIT_DATA = () => this.eventEmit({...code, canvas: canvas});\r\n     \r\n      // HTMLImageElement\r\n      if (element instanceof HTMLImageElement) {\r\n        callback(true);\r\n        EMIT_DATA();\r\n        PLAY_AUDIO(this.isBeep);\r\n      } \r\n      // HTMLVideoElement\r\n      if (element instanceof HTMLVideoElement) {\r\n        if (this.isAlwaysEmit) {\r\n          EMIT_DATA();\r\n          PLAY_AUDIO(this.isBeep);\r\n        } else if (code.data !== (this.data.value as any)['data']) {\r\n          EMIT_DATA();\r\n          PLAY_AUDIO(this.isBeep);\r\n        }\r\n      }\r\n    } else {\r\n      callback(false);\r\n      this.removeCanvas();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * removeCanvas\r\n   */\r\n  private removeCanvas(): void {\r\n    Object.assign([], this.resultsPanel.nativeElement.childNodes).forEach(el => this.resultsPanel.nativeElement.removeChild(el));\r\n  }\r\n\r\n  /**\r\n   * status\r\n   * @param isStart \r\n   * @param isLoading \r\n   */\r\n  private status(isStart: boolean, isLoading: boolean): void {\r\n    this.isStart = isStart;\r\n    this.isLoading = isLoading;\r\n  }\r\n\r\n  /**\r\n   * eventEmit\r\n   * @param response \r\n   * @param error \r\n   */\r\n  private eventEmit(response: any = false, error: any = false): void {\r\n    (response !== false) && this.data.next(response || { data: null });\r\n    (response !== false) && this.event.emit(response || { data: null });\r\n    (error !== false) && this.error.emit(error || null);\r\n  }\r\n\r\n  /**\r\n   * Single-thread\r\n   * Loop Recording on Camera\r\n   * Must be destroy request \r\n   * requestAnimationFrame\r\n   */\r\n  private requestAnimationFrame(): void {\r\n    this.rAF_ID = setInterval(() => {\r\n      if (this.video.nativeElement.readyState === this.video.nativeElement.HAVE_ENOUGH_DATA) {\r\n        this.drawImage(this.video.nativeElement);\r\n      }\r\n    }, 40);\r\n  }\r\n\r\n  /**\r\n   * Status of camera\r\n   * @return boolean\r\n   */\r\n  get isPause(): boolean {\r\n    return this.isStart && this.video.nativeElement.paused;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.pause();\r\n  }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { NgxScannerQrcodeService } from \"./ngx-scanner-qrcode.service\";\r\nimport { NgxScannerQrcodeComponent } from \"./ngx-scanner-qrcode.component\";\r\n\r\n\r\n@NgModule({\r\n  declarations: [NgxScannerQrcodeComponent],\r\n  exports: [NgxScannerQrcodeComponent],\r\n  providers: [NgxScannerQrcodeService],\r\n})\r\nexport class NgxScannerQrcodeModule {}\r\n"]}